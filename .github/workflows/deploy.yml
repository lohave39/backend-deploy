name: Deploy Node.js App to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Deploy Node.js app on EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            set -e

            # Install Nginx if not already installed
            if ! command -v nginx &> /dev/null; then
              echo "Installing Nginx..."
              sudo apt update
              sudo apt install nginx -y
            fi

            # Create/clean app directory
            rm -rf ~/nodejs-app
            mkdir -p ~/nodejs-app
            cd ~/nodejs-app

            # Clone your repo into this folder
            git clone https://github.com/lohave39/backend-deploy.git . || (git fetch origin && git reset --hard origin/main)

            # Create .env file
            cat > .env << EOF
            PORT=5000
            MONGO_URI=${{secrets.MONGO_URI}}
            JWT_SECRET=${{secrets.JWT_SECRET}}
            # add other ENV vars here
            EOF

            # Build Docker image
            sudo docker build -t nodejs-app:latest .

            # Stop & remove old container if it exists
            sudo docker stop nodejs-app || true
            sudo docker rm nodejs-app || true

            # Run the container
            sudo docker run -d \
              --name nodejs-app \
              --env-file .env \
              -p 5000:5000 \
              nodejs-app:latest

            # Configure Nginx reverse proxy
            sudo bash -c 'cat > /etc/nginx/sites-available/nodejs-app << EOL
            server {
                listen 80;

                location / {
                    proxy_pass http://localhost:5000;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade \$http_upgrade;
                    proxy_set_header Connection "upgrade";
                    proxy_set_header Host \$host;
                    proxy_cache_bypass \$http_upgrade;
                }
            }
            EOL'

            # Enable the new Nginx config
            sudo ln -sf /etc/nginx/sites-available/nodejs-app /etc/nginx/sites-enabled/default
            sudo nginx -t
            sudo systemctl restart nginx

            # Cleanup unused Docker images
            sudo docker image prune -f